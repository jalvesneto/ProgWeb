// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgWeb.Domain;

#nullable disable

namespace ProgWeb.Domain.Migrations
{
    [DbContext(typeof(ProgWebContext))]
    partial class ProgWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProgWeb.Domain.Entities.AcompanhamentoOrcamentario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("AutorizadPO")
                        .HasColumnType("bigint");

                    b.Property<long>("Autorizado")
                        .HasColumnType("bigint");

                    b.Property<int>("CD_Esfera")
                        .HasColumnType("int");

                    b.Property<int>("CD_Funcao")
                        .HasColumnType("int");

                    b.Property<int>("CD_Localizador")
                        .HasColumnType("int");

                    b.Property<int>("CD_Orgao")
                        .HasColumnType("int");

                    b.Property<int>("CD_Produto")
                        .HasColumnType("int");

                    b.Property<int>("CD_ProdutoPO")
                        .HasColumnType("int");

                    b.Property<int>("CD_Programa")
                        .HasColumnType("int");

                    b.Property<int>("CD_SubFuncao")
                        .HasColumnType("int");

                    b.Property<int>("CD_TipoPrograma")
                        .HasColumnType("int");

                    b.Property<int>("CD_UnidadeMedida")
                        .HasColumnType("int");

                    b.Property<int>("CD_UnidadeMedidaPO")
                        .HasColumnType("int");

                    b.Property<int>("CD_UnidadeOrcamentaria")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescAdicionalPergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescPergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescQuestionario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescResposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescTextoResposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescTipoPergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("DotacaoInicial")
                        .HasColumnType("bigint");

                    b.Property<long>("DotacaoInicialPO")
                        .HasColumnType("bigint");

                    b.Property<bool>("ElementosSemCaptacao")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Empenhado")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("EmpenhadoPO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Execicio")
                        .HasColumnType("int");

                    b.Property<long>("FinanceiroReprogramadoPO")
                        .HasColumnType("bigint");

                    b.Property<long>("FisicoReprogramadoPO")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Liquidado")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LiquidadoPO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LiquidoRap")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LiquidoRapPO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("LocalizadorPreenchimentoObrigatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MetaLoaPropostaPO")
                        .HasColumnType("bigint");

                    b.Property<int>("NumPergunta")
                        .HasColumnType("int");

                    b.Property<int>("NumPrioridadeResposta")
                        .HasColumnType("int");

                    b.Property<int>("NumQuestionario")
                        .HasColumnType("int");

                    b.Property<int>("NumResposta")
                        .HasColumnType("int");

                    b.Property<decimal>("Pago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PagoPO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProjetoLei")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("QtdMetaAtual")
                        .HasColumnType("bigint");

                    b.Property<long>("QtdMetaAtualPO")
                        .HasColumnType("bigint");

                    b.Property<int>("QtdMetaLoa")
                        .HasColumnType("int");

                    b.Property<long>("RealizadoLoa")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RealizadoPO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RealizadoRap")
                        .HasColumnType("bigint");

                    b.Property<string>("RegionalizacaoExecucaoComentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoDescricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoDescricaoCorteGeorafico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoDescricaoMunicipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoLiquidado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoRealizado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionalizacaoExecucaoSiglaUF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ReprogramadoFinanceiro")
                        .HasColumnType("bigint");

                    b.Property<long>("ReprogramadoFisico")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoCaptacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TituloPO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("snRegionalizarNaExecucao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CD_Esfera");

                    b.HasIndex("CD_Funcao");

                    b.HasIndex("CD_Localizador");

                    b.HasIndex("CD_Orgao");

                    b.HasIndex("CD_Produto");

                    b.HasIndex("CD_ProdutoPO");

                    b.HasIndex("CD_Programa");

                    b.HasIndex("CD_SubFuncao");

                    b.HasIndex("CD_TipoPrograma");

                    b.HasIndex("CD_UnidadeMedida");

                    b.HasIndex("CD_UnidadeMedidaPO");

                    b.HasIndex("CD_UnidadeOrcamentaria");

                    b.ToTable("AcompanhamentoOrcamentario");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Esfera", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Esferas");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Funcao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Funcoes");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Localizador", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Localizadores");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Orgao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Orgaos");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.ProdutoPO", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("ProdutosPO");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.Programa", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.SubFuncao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("SubFuncoes");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.TipoPrograma", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("TipoProgramas");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.UnidadeMedida", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("UnidadesMedida");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.UnidadeMedidaPO", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("UnidadesMedidaPO");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.UnidadeOrcamentaria", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("UnidadesOrcamentaria");
                });

            modelBuilder.Entity("ProgWeb.Domain.Entities.AcompanhamentoOrcamentario", b =>
                {
                    b.HasOne("ProgWeb.Domain.Entities.Esfera", "Esfera")
                        .WithMany()
                        .HasForeignKey("CD_Esfera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("CD_Funcao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.Localizador", "Localizador")
                        .WithMany()
                        .HasForeignKey("CD_Localizador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.Orgao", "Orgao")
                        .WithMany()
                        .HasForeignKey("CD_Orgao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("CD_Produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.ProdutoPO", "ProdutoPO")
                        .WithMany()
                        .HasForeignKey("CD_ProdutoPO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("CD_Programa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.SubFuncao", "SubFuncao")
                        .WithMany()
                        .HasForeignKey("CD_SubFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.TipoPrograma", "TipoPrograma")
                        .WithMany()
                        .HasForeignKey("CD_TipoPrograma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("CD_UnidadeMedida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.UnidadeMedidaPO", "UnidadeMedidaPO")
                        .WithMany()
                        .HasForeignKey("CD_UnidadeMedidaPO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgWeb.Domain.Entities.UnidadeOrcamentaria", "UnidadeOrcamentaria")
                        .WithMany()
                        .HasForeignKey("CD_UnidadeOrcamentaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Esfera");

                    b.Navigation("Funcao");

                    b.Navigation("Localizador");

                    b.Navigation("Orgao");

                    b.Navigation("Produto");

                    b.Navigation("ProdutoPO");

                    b.Navigation("Programa");

                    b.Navigation("SubFuncao");

                    b.Navigation("TipoPrograma");

                    b.Navigation("UnidadeMedida");

                    b.Navigation("UnidadeMedidaPO");

                    b.Navigation("UnidadeOrcamentaria");
                });
#pragma warning restore 612, 618
        }
    }
}
